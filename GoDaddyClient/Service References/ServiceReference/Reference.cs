//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GoDaddyClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/GoDaddyChatService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/GoDaddyChatService")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string receiverUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> sendMessageTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string senderUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string receiverUserName {
            get {
                return this.receiverUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.receiverUserNameField, value) != true)) {
                    this.receiverUserNameField = value;
                    this.RaisePropertyChanged("receiverUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> sendMessageTime {
            get {
                return this.sendMessageTimeField;
            }
            set {
                if ((this.sendMessageTimeField.Equals(value) != true)) {
                    this.sendMessageTimeField = value;
                    this.RaisePropertyChanged("sendMessageTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string senderUserName {
            get {
                return this.senderUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.senderUserNameField, value) != true)) {
                    this.senderUserNameField = value;
                    this.RaisePropertyChanged("senderUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.InterfaceServerChatService", CallbackContract=typeof(GoDaddyClient.ServiceReference.InterfaceServerChatServiceCallback))]
    public interface InterfaceServerChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/Register", ReplyAction="http://tempuri.org/InterfaceServerChatService/RegisterResponse")]
        string Register(GoDaddyClient.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/Register", ReplyAction="http://tempuri.org/InterfaceServerChatService/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(GoDaddyClient.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/Login", ReplyAction="http://tempuri.org/InterfaceServerChatService/LoginResponse")]
        GoDaddyClient.ServiceReference.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/Login", ReplyAction="http://tempuri.org/InterfaceServerChatService/LoginResponse")]
        System.Threading.Tasks.Task<GoDaddyClient.ServiceReference.User> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/ReceiveFriendList", ReplyAction="http://tempuri.org/InterfaceServerChatService/ReceiveFriendListResponse")]
        GoDaddyClient.ServiceReference.User[] ReceiveFriendList(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/ReceiveFriendList", ReplyAction="http://tempuri.org/InterfaceServerChatService/ReceiveFriendListResponse")]
        System.Threading.Tasks.Task<GoDaddyClient.ServiceReference.User[]> ReceiveFriendListAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/ReceiveFriendsToAccept", ReplyAction="http://tempuri.org/InterfaceServerChatService/ReceiveFriendsToAcceptResponse")]
        GoDaddyClient.ServiceReference.User[] ReceiveFriendsToAccept(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/ReceiveFriendsToAccept", ReplyAction="http://tempuri.org/InterfaceServerChatService/ReceiveFriendsToAcceptResponse")]
        System.Threading.Tasks.Task<GoDaddyClient.ServiceReference.User[]> ReceiveFriendsToAcceptAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/LogOut", ReplyAction="http://tempuri.org/InterfaceServerChatService/LogOutResponse")]
        string LogOut(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/LogOut", ReplyAction="http://tempuri.org/InterfaceServerChatService/LogOutResponse")]
        System.Threading.Tasks.Task<string> LogOutAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/SendMessage", ReplyAction="http://tempuri.org/InterfaceServerChatService/SendMessageResponse")]
        string SendMessage(GoDaddyClient.ServiceReference.Message m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/SendMessage", ReplyAction="http://tempuri.org/InterfaceServerChatService/SendMessageResponse")]
        System.Threading.Tasks.Task<string> SendMessageAsync(GoDaddyClient.ServiceReference.Message m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/AddFriend", ReplyAction="http://tempuri.org/InterfaceServerChatService/AddFriendResponse")]
        string AddFriend(string userName, string friendName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/AddFriend", ReplyAction="http://tempuri.org/InterfaceServerChatService/AddFriendResponse")]
        System.Threading.Tasks.Task<string> AddFriendAsync(string userName, string friendName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/AcceptFriend", ReplyAction="http://tempuri.org/InterfaceServerChatService/AcceptFriendResponse")]
        string AcceptFriend(string requesterName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/AcceptFriend", ReplyAction="http://tempuri.org/InterfaceServerChatService/AcceptFriendResponse")]
        System.Threading.Tasks.Task<string> AcceptFriendAsync(string requesterName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/RemoveFriend", ReplyAction="http://tempuri.org/InterfaceServerChatService/RemoveFriendResponse")]
        string RemoveFriend(string user, string friend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/RemoveFriend", ReplyAction="http://tempuri.org/InterfaceServerChatService/RemoveFriendResponse")]
        System.Threading.Tasks.Task<string> RemoveFriendAsync(string user, string friend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/GetMessageHistory", ReplyAction="http://tempuri.org/InterfaceServerChatService/GetMessageHistoryResponse")]
        GoDaddyClient.ServiceReference.Message[] GetMessageHistory(string user, string friend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/GetMessageHistory", ReplyAction="http://tempuri.org/InterfaceServerChatService/GetMessageHistoryResponse")]
        System.Threading.Tasks.Task<GoDaddyClient.ServiceReference.Message[]> GetMessageHistoryAsync(string user, string friend);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InterfaceServerChatServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/RecievMessage", ReplyAction="http://tempuri.org/InterfaceServerChatService/RecievMessageResponse")]
        void RecievMessage(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/UpdateFriendList", ReplyAction="http://tempuri.org/InterfaceServerChatService/UpdateFriendListResponse")]
        void UpdateFriendList(GoDaddyClient.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/UpdateFriendsToAcceptList", ReplyAction="http://tempuri.org/InterfaceServerChatService/UpdateFriendsToAcceptListResponse")]
        void UpdateFriendsToAcceptList(GoDaddyClient.ServiceReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceServerChatService/removeFromPendingList", ReplyAction="http://tempuri.org/InterfaceServerChatService/removeFromPendingListResponse")]
        void removeFromPendingList(GoDaddyClient.ServiceReference.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InterfaceServerChatServiceChannel : GoDaddyClient.ServiceReference.InterfaceServerChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InterfaceServerChatServiceClient : System.ServiceModel.DuplexClientBase<GoDaddyClient.ServiceReference.InterfaceServerChatService>, GoDaddyClient.ServiceReference.InterfaceServerChatService {
        
        public InterfaceServerChatServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public InterfaceServerChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public InterfaceServerChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public InterfaceServerChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public InterfaceServerChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string Register(GoDaddyClient.ServiceReference.User user) {
            return base.Channel.Register(user);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(GoDaddyClient.ServiceReference.User user) {
            return base.Channel.RegisterAsync(user);
        }
        
        public GoDaddyClient.ServiceReference.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<GoDaddyClient.ServiceReference.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public GoDaddyClient.ServiceReference.User[] ReceiveFriendList(string username) {
            return base.Channel.ReceiveFriendList(username);
        }
        
        public System.Threading.Tasks.Task<GoDaddyClient.ServiceReference.User[]> ReceiveFriendListAsync(string username) {
            return base.Channel.ReceiveFriendListAsync(username);
        }
        
        public GoDaddyClient.ServiceReference.User[] ReceiveFriendsToAccept(string username) {
            return base.Channel.ReceiveFriendsToAccept(username);
        }
        
        public System.Threading.Tasks.Task<GoDaddyClient.ServiceReference.User[]> ReceiveFriendsToAcceptAsync(string username) {
            return base.Channel.ReceiveFriendsToAcceptAsync(username);
        }
        
        public string LogOut(string username) {
            return base.Channel.LogOut(username);
        }
        
        public System.Threading.Tasks.Task<string> LogOutAsync(string username) {
            return base.Channel.LogOutAsync(username);
        }
        
        public string SendMessage(GoDaddyClient.ServiceReference.Message m) {
            return base.Channel.SendMessage(m);
        }
        
        public System.Threading.Tasks.Task<string> SendMessageAsync(GoDaddyClient.ServiceReference.Message m) {
            return base.Channel.SendMessageAsync(m);
        }
        
        public string AddFriend(string userName, string friendName) {
            return base.Channel.AddFriend(userName, friendName);
        }
        
        public System.Threading.Tasks.Task<string> AddFriendAsync(string userName, string friendName) {
            return base.Channel.AddFriendAsync(userName, friendName);
        }
        
        public string AcceptFriend(string requesterName, string userName) {
            return base.Channel.AcceptFriend(requesterName, userName);
        }
        
        public System.Threading.Tasks.Task<string> AcceptFriendAsync(string requesterName, string userName) {
            return base.Channel.AcceptFriendAsync(requesterName, userName);
        }
        
        public string RemoveFriend(string user, string friend) {
            return base.Channel.RemoveFriend(user, friend);
        }
        
        public System.Threading.Tasks.Task<string> RemoveFriendAsync(string user, string friend) {
            return base.Channel.RemoveFriendAsync(user, friend);
        }
        
        public GoDaddyClient.ServiceReference.Message[] GetMessageHistory(string user, string friend) {
            return base.Channel.GetMessageHistory(user, friend);
        }
        
        public System.Threading.Tasks.Task<GoDaddyClient.ServiceReference.Message[]> GetMessageHistoryAsync(string user, string friend) {
            return base.Channel.GetMessageHistoryAsync(user, friend);
        }
    }
}
